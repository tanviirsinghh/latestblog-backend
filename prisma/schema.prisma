generator client {
  provider   = "prisma-client-js"
  engineType = "library"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String      @id @default(uuid())
  email          String      @unique
  name           String?
  password       String
  blogName       String?
  profilePicture String?
  Twitter        String?
  bio            String?
  coverpicture   String?
  github         String?
  linkedin       String?
  location       String?
  likes          Like[]
  posts          Post[]
  savedPosts     SavedPost[]
  comments       Comment[]
}

model Post {
  id         String      @id @default(uuid())
  title      String
  content    String
  published  Boolean     @default(false)
  authorId   String
  url        String?
  like       Like[]
  author     User        @relation(fields: [authorId], references: [id])
  savedPosts SavedPost[]
  comment    Comment[]
}

model Like {
  id     String @id @default(uuid())
  postId String
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([postId, userId])
}

// model Comment {
//   id                 String @id @default(uuid())
//   userId             String
//   userName           String
//   userProfilePicture String
//   postId             String
//   timestamp          String
//   comment            String
//   user               User   @relation(fields: [userId], references: [id])
//   post               Post   @relation(fields: [postId], references: [id])
// }


model Comment {
  id        String   @id @default(uuid())
  userId    String
  postId    String
  content   String   // Renamed from "comment"
  timestamp DateTime // Changed from String to DateTime

  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
}

model SavedPost {
  id     String @id @default(uuid())
  userId String
  postId String
  post   Post   @relation(fields: [postId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
}
